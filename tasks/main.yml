---
- name: Install pip
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: true

- name: Install curator python package (Debian Bookworm)
  ansible.builtin.pip:
    name: "{{ curator_package }}"
    version: "{{ curator_package_version }}"
    extra_args: --break-system-packages
  when: ansible_distribution_release == 'bookworm'

- name: Install curator python package
  ansible.builtin.pip:
    name: "{{ curator_package }}"
    version: "{{ curator_package_version }}"
  when: ansible_distribution_release != 'bookworm'

- name: Ensure curator log path exists
  ansible.builtin.file:
    group: adm
    mode: "0755"
    owner: root
    path: "{{ curator_log_file | dirname }}"
    state: directory
  when: curator_log_file | length > 0

- name: Ensure curator config path exists
  ansible.builtin.file:
    group: root
    mode: "0755"
    name: "{{ curator_config_path }}"
    owner: root
    state: directory

- name: Install curator config file
  ansible.builtin.template:
    dest: "{{ curator_config_path }}/curator.yml"
    mode: "0644"
    src: curator.yml.j2

- name: Install curator action file
  ansible.builtin.template:
    dest: "{{ curator_config_path }}/actionfile.yml"
    mode: "0644"
    src: actionfile.yml.j2

- name: Ensure systemd configuration files are installed
  ansible.builtin.template:
    dest: "/etc/systemd/system/{{ item.key }}"
    group: root
    mode: "0644"
    owner: root
    src: systemd.conf.j2
  loop: "{{ curator_systemd_config | dict2items }}"
  when: curator_systemd_config
  notify: Reload systemd daemon

- name: Ensure systemd unit are enabled and running
  ansible.builtin.systemd_service:
    enabled: true
    name: "{{ item.key }}"
    state: started
  loop: "{{ curator_systemd_config | dict2items }}"
  when: curator_systemd_config
